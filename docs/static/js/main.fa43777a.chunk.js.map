{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAU,IAFP,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAcvC,OACI,sBAAMC,SATW,SAAEC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAfc,SAAEP,GAAF,OAASF,EAAeE,EAAEQ,OAAOF,aAoB/DZ,EAAYe,UAAY,CACpBd,c,OAAee,EAAUC,KAAKC,YAEnBlB,Q,+BCdAmB,EAdF,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACNC,EADM,iDAC2CC,UAAWH,GADtD,+DAEOI,MAAOF,GAFd,cAENG,EAFM,gBAGWA,EAAKC,OAHhB,uBAGJC,EAHI,EAGJA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT9B,kBAYLM,GAZK,4CAAH,sDCUEO,EAVK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE1B,OACI,sBAAKc,UAAU,gEAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCiBFO,EApBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECCN,SAAEA,GAAe,IAAD,EAEdlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAbAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAAEpB,IAEEqB,EDnB0BK,CAAc1B,GAAlCa,EAFiB,EAEtBN,KAAaa,EAFS,EAETA,QAErB,OACI,qCACI,6BAAMpB,IAEJoB,GAAW,mBAAGJ,UAAU,qDAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAA+BA,GAAbA,EAAIC,aEW/BgB,EAxBM,WAAO,IAAD,EAEa7C,mBAAS,CAAC,iBAFvB,mBAEhB8C,EAFgB,KAEJ/C,EAFI,KAMvB,OACI,qCACI,iDACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAEA,6BAEQ+C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,Y,MCfvC6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.fa43777a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState( '' );\r\n\r\n    const handleInputChange = ( e ) => setInputValue( e.target.value );\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cats => [ inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type='text'\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n                />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\nexport default AddCategory\r\n","\r\n\r\nconst getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=BxXmAscpuBzu34vo5rPQ6bqh4Qg8MwJ0`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}\r\nexport default getGifs;","import React from 'react'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className='card-item animate__animated animate__bounce animate__delay-2s'>\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n    \r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            \r\n            { loading && <p className='animate__animated animate__flash animate__delay-1s'>Loading</p>}\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem key={img.id} { ...img } />\r\n                    ))\r\n                }\r\n            </div>        \r\n        </>\r\n    )\r\n}\r\nexport default GifGrid;","\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [ category ])\r\n\r\n    return state;\r\n\r\n\r\n}\r\n","import React, { useState} from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['Black Clover']);\r\n\r\n    // const handleAdd = () => setCategories( cats => [...cats, 'Boku no Hero']);\r\n\r\n    return (\r\n        <>\r\n            <h1> Gif Expert App</h1>\r\n            <AddCategory setCategories={ setCategories }/>\r\n\r\n            <hr/>\r\n\r\n            <ul>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid key={ category } category={ category } />\r\n                    ))\r\n                }\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <GifExpertApp />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}